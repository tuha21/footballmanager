package com.fis.fw.core.dao.impl;import com.fis.fw.core.entity.LogSession;import org.springframework.stereotype.Repository;import com.fis.fw.common.generics.impl.GenericDaoImpl;import com.fis.fw.core.dao.LogSessionDao;import java.sql.Connection;import java.sql.PreparedStatement;import java.util.List;public class LogSessionDaoImpl extends GenericDaoImpl<LogSession, Integer> implements LogSessionDao {    @Override    public List<LogSession> save(List<LogSession> lst) throws Exception {        try (Connection conn = dataSource.getConnection()) {            conn.setAutoCommit(false);            PreparedStatement psmt = conn.prepareStatement(                    "INSERT INTO ADMIN_DTHGD.LOG_SESSION(LOG_SESSION_ID, " +                            " USER_ID, CREATE_TIME, TOKEN, IP_ADDRESS) " +                            " VALUES (ADMIN_DTHGD.LOG_SESSION_SEQ.nextval, ?, ?, ?, ?)");            int count = 0;            for (LogSession item : lst) {                psmt.setObject(1, item.getUserId());                psmt.setObject(2, new java.sql.Date(item.getCreateTime().getTime()));                psmt.setObject(3, item.getToken());                psmt.setObject(4, item.getIpAddress());                psmt.execute();                count++;                if (count % 100 == 0) {                    conn.commit();                }            }            conn.commit();        } catch (Exception ex) {            throw ex;        }        return lst;    }    @Override    public void updateSessionLog(Integer userId, Integer sessionId, String ipAddress, String accessToken) throws Exception {        try (Connection conn = dataSource.getConnection()) {            conn.setAutoCommit(false);            String sql = "UPDATE ADMIN_DTHGD.LOG_SESSION a SET a.USER_ID=?,a.IP_ADDRESS=?, a.TOKEN=?" +                    " WHERE a.LOG_SESSION_ID=?";            PreparedStatement psmt = conn.prepareStatement(sql);            psmt.setObject(1, userId);            psmt.setObject(2, ipAddress);            psmt.setObject(3, accessToken);            psmt.setObject(4, sessionId);            psmt.execute();            conn.commit();        } catch (Exception ex) {            throw ex;        }    }}